import numpy as np
import matplotlib
import pylab
from pylab import *
import matplotlib.pyplot as plt
from matplotlib.ticker import NullFormatter
from matplotlib.font_manager import FontProperties
from sklearn.neighbors import KernelDensity
from scipy.stats import gaussian_kde
from matplotlib.pyplot import figure, show
import scipy.optimize
from mpl_toolkits.axes_grid1.axes_divider import make_axes_locatable


from matplotlib import rc
from matplotlib import rcParams

rc('text', usetex=True)
rc('text.latex', preamble='\\usepackage{sfmath}')
rcParams['font.family'] = 'sans-serif'
rcParams['font.sans-serif'] = ['Arial']

matplotlib.rcParams['xtick.labelsize'] = 29
matplotlib.rcParams['ytick.labelsize'] = 29

pylab.rcParams['xtick.major.pad']='4'
pylab.rcParams['ytick.major.pad']='4'



font0 = FontProperties()



fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(22, 8))
ax0, ax1 = axes.flatten()

nullfmt = NullFormatter() # no labels


#manitoba, #wisconsin
x0 = np.array([5.50000000000000, 6.50000000000000, 8.35000000000000, 8.95000000000000, 7.95000000000000, 9.35000000000000, 9.50000000000000, 9.25000000000000, 9, 9.90000000000000, 9.70000000000000, 11.5000000000000, 11, 12, 13, 13, 11.6000000000000, 11.5500000000000, 12, 12, 11.5500000000000, 12.9000000000000, 13.3500000000000, 11.7000000000000, 12.9500000000000, 13.8500000000000, 13.5000000000000, 15, 13.7500000000000, 14.5000000000000, 14.3000000000000, 14.7000000000000, 16.2500000000000, 15.2500000000000, 18.2000000000000, 18.2500000000000, 21.2500000000000, 20, 18.5500000000000, 19.1500000000000, 20, 19.1000000000000, 20.7000000000000, 18.5500000000000, 19.8500000000000, 21.2500000000000, 20.7000000000000, 18.7500000000000, 22, 20.1500000000000, 23.9000000000000, 20.9000000000000, 26.5000000000000, 29, 26.4500000000000, 22.7500000000000, 28.2500000000000, 30, 29, 28.7500000000000, 27.2000000000000, 25.5000000000000, 27.5000000000000, 34.5000000000000, 29.7500000000000, 29.5000000000000, 32.5000000000000, 35, 39.5000000000000, 37.5000000000000, 41, 34, 35, 38.6000000000000, 39.3000000000000, 39.8000000000000, 38, 40.5000000000000, 34.7500000000000, 42.2000000000000, 38, 32.4500000000000, 48.5000000000000, 37, 39.5000000000000, 46, 50.2000000000000, 44.5000000000000, 48.5000000000000, 49.5000000000000, 47.5000000000000, 53.3500000000000, 56, 53.5000000000000, 47, 50, 61.4000000000000, 66.5000000000000, 50.5000000000000, 69.5000000000000, 67, 47.2500000000000, 59.5000000000000, 69.5000000000000, 63.1500000000000, 64.5000000000000, 77, 59.5000000000000, 67.5000000000000, 59, 74.5000000000000, 75, 76.5000000000000, 70.8500000000000, 76.5000000000000, 85, 77.5000000000000, 72.7500000000000, 76.5000000000000, 70, 81, 102.500000000000, 85, 96.5000000000000, 103.500000000000, 85.5000000000000, 111.500000000000, 112.500000000000, 121.500000000000, 109.500000000000, 135, 130.500000000000, 143, 160, 158, 172.500000000000, 167.500000000000, 162, 200, 179.500000000000, 173, 192, 192.500000000000, 262.500000000000, 260, 295, 287, 274, 332, 340, 337, 355, 350, 325, 357.500000000000, 382.500000000000, 345.500000000000, 380, 431, 409, 412.500000000000, 495, 467.500000000000, 462.500000000000, 555, 527, 678, 662.500000000000, 720, 703, 658.500000000000, 726, 681.500000000000, 809.500000000000, 825, 775, 940, 742.500000000000, 722, 939, 689, 755, 813.500000000000, 726, 851, 987.500000000000, 1065, 887.500000000000, 995, 1148.50000000000, 1111, 988.500000000000, 1147, 1065, 1109.50000000000, 1365, 1234, 1200, 1290, 1565, 1175, 1335, 1395, 1552, 1380, 1425, 1292.50000000000, 1505, 1700, 1405, 2015, 1724, 1600, 2689.50000000000, 3250, 3630, 3695, 4200, 3916.50000000000, 6750, 6500, 63.6000000000000, 21, 25, 47, 742, 34.3000000000000, 22.1000000000000, 119.600000000000, 28.5000000000000, 106, 97, 32, 14, 8, 10, 19, 3750, 3, 146.300000000000, 21, 58, 47, 59, 80, 500, 166, 200, 85, 94, 630, 972])

x1 = np.array([5.50000000000000, 6, 6.50000000000000, 8.35000000000000, 371.900000000000, 8.95000000000000, 8.65000000000000, 7.95000000000000, 9.10000000000000, 9.35000000000000, 9.50000000000000, 9.25000000000000, 9, 10.5000000000000, 9.90000000000000, 9.70000000000000, 11.5000000000000, 11, 12, 13, 11.6000000000000, 11.5500000000000, 12.1500000000000, 12.8000000000000, 12, 12, 11.5500000000000, 12.9000000000000, 13.3500000000000, 11.7000000000000, 12.9500000000000, 13.8500000000000, 13.5000000000000, 14.6000000000000, 15, 13.7500000000000, 14.5000000000000, 14.3000000000000, 14.7000000000000, 15.2500000000000, 16.8000000000000, 18.2000000000000, 18.5000000000000, 21.2500000000000, 18.5500000000000, 19.1500000000000, 20, 19.1000000000000, 20.7000000000000, 18.5500000000000, 19.8500000000000, 21.2500000000000, 21.4000000000000, 20.7000000000000, 21.8000000000000, 18.7500000000000, 22.2500000000000, 22, 20.1500000000000, 23.9000000000000, 20.9000000000000, 29, 26.5000000000000, 29, 26.4500000000000, 22.7500000000000, 28.2500000000000, 29, 27, 28.7500000000000, 27.2000000000000, 25.5000000000000, 27.5000000000000, 34.5000000000000, 30.5000000000000, 31, 29.7500000000000, 29.5000000000000, 32.5000000000000, 35, 39.5000000000000, 41, 34, 35, 38.6000000000000, 39.3000000000000, 38, 34.7500000000000, 44.5000000000000, 42.2000000000000, 38, 32.4500000000000, 48.5000000000000, 37, 39.5000000000000, 46, 50.2000000000000, 48.5000000000000, 49.5000000000000, 56, 47, 50, 61.4000000000000, 56, 66.5000000000000, 50.5000000000000, 67, 47.2500000000000, 59.5000000000000, 69.5000000000000, 63.1500000000000, 64.5000000000000, 77, 59.5000000000000, 67.5000000000000, 59, 74.5000000000000, 75, 73.5000000000000, 76.5000000000000, 70.8500000000000, 76.5000000000000, 85, 77.5000000000000, 72.7500000000000, 76.5000000000000, 75, 70, 81, 96.5000000000000, 103.500000000000, 85.5000000000000, 115, 111.500000000000, 112.500000000000, 121.500000000000, 125, 135, 130.500000000000, 143, 160, 158, 172.500000000000, 167.500000000000, 162, 200, 179.500000000000, 173, 193.500000000000, 192.500000000000, 262.500000000000, 225, 260, 295, 287, 332, 340, 280, 355, 301.500000000000, 350, 325, 321, 413, 382.500000000000, 410, 380, 431, 409, 412.500000000000, 495, 467.500000000000, 462.500000000000, 468.500000000000, 555, 682.500000000000, 678, 662.500000000000, 595, 720, 703, 775, 726, 681.500000000000, 809.500000000000, 825, 935, 810, 940, 742.500000000000, 722, 974, 939, 689, 755, 813.500000000000, 999, 851, 1065, 995, 1148.50000000000, 1111, 988.500000000000, 1147, 1065, 1109.50000000000, 1365, 1234, 1200, 1290, 1565, 1175, 1335, 1395, 1445, 1520, 1380, 1425, 1292.50000000000, 1700, 1405, 2015, 1724, 1600, 2689.50000000000, 3250, 3630, 3695, 4200, 3916.50000000000, 6750, 6500, 63.6000000000000, 21, 129, 47, 742, 34.3000000000000, 22.1000000000000, 230, 119.600000000000, 416, 28.5000000000000, 102, 106, 97, 32, 14, 8, 8, 2500, 10, 19, 3750, 3, 550, 21, 58, 47, 59, 80, 600, 500, 166, 200, 85, 94, 630, 972])



eval_points = np.linspace(min(np.log10(x0)), max(np.log10(x0)))
kde_sp = gaussian_kde(np.log10(x0), bw_method=0.4)
kd = kde_sp.pdf(eval_points)


ax0.set_xscale('log')
xticklabels = getp(gca(), 'xticklabels')
yticklabels = getp(gca(), 'yticklabels')
setp(yticklabels, fontsize=25, fontname = 'Arial')
setp(xticklabels, fontsize=25)

colors = ['navy', 'gold']
labels = [r'Manitoba - 50\textdegree', r'Mississippi - 33\textdegree']


ax0.plot(10**eval_points, kd, label = labels[0], color = colors[0], lw=3)

eval_points = np.linspace(min(np.log10(x1)), max(np.log10(x1)))
kde_sp = gaussian_kde(np.log10(x1), bw_method=0.4)
kd = kde_sp.pdf(eval_points)

ax0.plot(10**eval_points, kd, label = labels[1], color = colors[1], lw=3)


ax0.set_xlim((1, 10000))


#suriname, #amapa
x2 = np.array([2.40000000000000, 2.30000000000000, 2.15000000000000, 2.40000000000000, 2.90000000000000, 3.15000000000000, 3.35000000000000, 2.65000000000000, 3.45000000000000, 4.25000000000000, 4.30000000000000, 3.75000000000000, 3.75000000000000, 4.25000000000000, 5, 4.80000000000000, 4.85000000000000, 5.15000000000000, 6, 6.50000000000000, 6.30000000000000, 6.60000000000000, 6.50000000000000, 7, 7, 7, 6.20000000000000, 7, 7.25000000000000, 6.75000000000000, 6.60000000000000, 7.35000000000000, 7.25000000000000, 7.60000000000000, 8, 8.50000000000000, 8, 8, 8, 8.35000000000000, 8.50000000000000, 8.50000000000000, 8.25000000000000, 8.50000000000000, 8.20000000000000, 9.10000000000000, 8.50000000000000, 8.75000000000000, 8.90000000000000, 9.25000000000000, 9, 8.45000000000000, 9.50000000000000, 7.25000000000000, 8.65000000000000, 10.5000000000000, 10.7500000000000, 10.5000000000000, 9.50000000000000, 9.50000000000000, 10, 9.85000000000000, 9.70000000000000, 9.50000000000000, 10, 10.2500000000000, 10.0500000000000, 9.25000000000000, 9.25000000000000, 9.25000000000000, 9.75000000000000, 10.4000000000000, 11, 9.40000000000000, 10.7500000000000, 11.3500000000000, 11.2500000000000, 11.2500000000000, 12.5000000000000, 12.5000000000000, 12.2500000000000, 12.8500000000000, 10.9000000000000, 11.7500000000000, 12, 13.5000000000000, 12, 12.5000000000000, 13.5000000000000, 10.3000000000000, 11.5500000000000, 12.9500000000000, 13.2500000000000, 13.1000000000000, 13, 12, 11.9000000000000, 12, 12.7500000000000, 14.8500000000000, 13.9000000000000, 12.5000000000000, 14, 13.5000000000000, 14, 13, 13.5000000000000, 13.6000000000000, 13.1500000000000, 15.3500000000000, 14.7500000000000, 16.5000000000000, 15, 15, 15.7500000000000, 13, 15.5000000000000, 15, 16, 16.2500000000000, 15.5000000000000, 14.5000000000000, 15.5000000000000, 16, 16.5000000000000, 16.5000000000000, 17, 15.2500000000000, 16.5000000000000, 14.5000000000000, 14.6500000000000, 16.2500000000000, 16.1500000000000, 16, 14, 18, 17.5000000000000, 15.2500000000000, 16.8000000000000, 19, 18.5000000000000, 18.5000000000000, 17.7500000000000, 17, 19, 17, 20.2500000000000, 18, 19, 20, 17, 18, 20, 17.5000000000000, 18.5000000000000, 18.8500000000000, 19.7500000000000, 18.5000000000000, 21, 21, 20.5000000000000, 19.5000000000000, 20, 21.5000000000000, 21, 20, 19.1000000000000, 21, 20.7000000000000, 22, 18.5500000000000, 23.5000000000000, 22.5000000000000, 22.5000000000000, 20.8000000000000, 22, 24.2500000000000, 24.5000000000000, 25.5000000000000, 25, 24, 24.3750000000000, 24, 25, 25, 23.5000000000000, 25.7500000000000, 29.0500000000000, 24.5000000000000, 27, 27, 29, 26.5000000000000, 23.9000000000000, 27, 26.4000000000000, 29, 26.5000000000000, 28.7500000000000, 27, 28.7500000000000, 32.5000000000000, 30.4500000000000, 28.5000000000000, 29.5000000000000, 31.5000000000000, 33.5000000000000, 34.5000000000000, 25.5000000000000, 34.5000000000000, 34.5000000000000, 32, 30.5000000000000, 30.5000000000000, 35.5000000000000, 36.5000000000000, 31, 31, 35, 30.5000000000000, 34.5000000000000, 34.5000000000000, 37.5000000000000, 35, 34.5000000000000, 35, 35.7500000000000, 35, 33, 36.5000000000000, 38, 30, 34, 37, 37.5000000000000, 34.1000000000000, 34.1000000000000, 34, 37.7000000000000, 37.7000000000000, 44, 36, 36.5000000000000, 42, 38, 44, 35, 45.5000000000000, 37.5000000000000, 43.5000000000000, 38, 40, 45, 39, 41.5000000000000, 46.5000000000000, 46, 34.7500000000000, 45.5000000000000, 47, 41, 46, 46.7500000000000, 48, 47.2500000000000, 48.2500000000000, 47.5000000000000, 48.5000000000000, 52.5000000000000, 52, 49.2000000000000, 50, 54, 48, 60, 53.5000000000000, 59, 56, 60, 56, 60, 52.5000000000000, 55, 47, 60, 56, 54.5000000000000, 59.5000000000000, 50, 55.5000000000000, 61.5000000000000, 60, 51.9000000000000, 60, 62.2500000000000, 66, 62, 62, 64.2500000000000, 67, 50.5000000000000, 68, 69, 67, 65, 70.5000000000000, 70, 62.5000000000000, 68.2500000000000, 47.2500000000000, 66.5000000000000, 58.5000000000000, 62.5000000000000, 73, 70, 63.5000000000000, 62.5000000000000, 69, 69, 65.5000000000000, 81, 79.5000000000000, 66, 65.5000000000000, 78, 85.5000000000000, 85, 70.8500000000000, 95.5000000000000, 88, 89, 72.7500000000000, 83.5000000000000, 89, 93.5000000000000, 76.5000000000000, 96.3750000000000, 93.5000000000000, 75, 70, 101.500000000000, 88, 102, 81, 85, 99.5000000000000, 105.500000000000, 109.500000000000, 87, 113.500000000000, 115.500000000000, 113.500000000000, 85.5000000000000, 109.500000000000, 119, 113, 117, 105, 124.750000000000, 122.500000000000, 111.500000000000, 132, 121, 112.500000000000, 121.500000000000, 129, 117.500000000000, 121.500000000000, 135, 136.500000000000, 109.500000000000, 135, 126.500000000000, 144, 140, 128.500000000000, 136, 153, 149, 150, 130.500000000000, 149, 164, 165, 137, 158, 179.500000000000, 173.500000000000, 184.500000000000, 212.500000000000, 210.500000000000, 159, 152.500000000000, 155, 162, 204, 188.500000000000, 201.500000000000, 179.500000000000, 173, 208.500000000000, 193.500000000000, 208, 242.500000000000, 227.500000000000, 192.500000000000, 216, 214.500000000000, 228.500000000000, 211, 231.500000000000, 246, 232.500000000000, 252, 241.750000000000, 245, 256.500000000000, 254, 285, 265, 220.500000000000, 307, 225, 294.500000000000, 292, 306, 335, 325, 291.500000000000, 345, 345, 316, 337.500000000000, 341, 308, 274, 346.500000000000, 344.500000000000, 336, 341, 280, 355, 301.500000000000, 361, 290, 315, 351.500000000000, 412.500000000000, 404, 325, 370, 321, 413, 378, 427, 393, 383.500000000000, 460, 382.500000000000, 410, 380, 441, 437.500000000000, 431, 325, 409, 453, 409, 540, 462.500000000000, 527.500000000000, 554.500000000000, 460, 468.500000000000, 548, 510, 490, 482.500000000000, 562.500000000000, 585.500000000000, 637, 631, 547, 566.500000000000, 607.500000000000, 495, 682.500000000000, 554, 650.500000000000, 725, 765, 750, 661, 680, 797.500000000000, 793.500000000000, 915, 814, 765, 832.500000000000, 951.500000000000, 745, 742.500000000000, 904.500000000000, 689, 1019, 921, 851, 803.500000000000, 1050, 1106, 979, 1041, 1160, 1085, 1301, 1250, 1187.50000000000, 1275, 1185, 1065, 1195, 1145, 1450, 1137, 1343.50000000000, 1410, 1379, 1210, 1466, 1520, 1825, 1425, 2000, 3075, 3375, 3300, 2995, 4400, 7001, 109.300000000000, 96.5000000000000, 48, 21.5000000000000, 35.9000000000000, 155, 485, 15, 47, 93.5000000000000, 43, 46, 43.5000000000000, 12.5000000000000, 53, 55.7000000000000, 11, 284.600000000000, 405, 46.2000000000000, 28.5000000000000, 7.80000000000000, 102, 26, 10, 11.3000000000000, 26, 10, 584, 8, 4200, 11.9000000000000, 8.10000000000000, 20, 18, 19, 25, 15.7000000000000, 21, 15.3000000000000, 22.7000000000000, 10.7000000000000, 12, 67.2000000000000, 18.3000000000000, 88, 12, 4.20000000000000, 16.5000000000000, 7, 13.4000000000000, 42, 18, 37, 18.5000000000000, 20, 25, 82, 8, 8, 28, 7, 31, 840, 11, 54, 123, 95, 4.60000000000000, 88, 4.30000000000000, 3000, 18, 40, 58, 61, 162, 35, 330, 28, 60, 420, 1275, 18, 262, 180, 700, 102])

x3 = np.array([2.40000000000000, 2.30000000000000, 2.15000000000000, 2.75000000000000, 2.40000000000000, 2.90000000000000, 3.15000000000000, 3.35000000000000, 2.65000000000000, 3.45000000000000, 3.50000000000000, 4.25000000000000, 4.30000000000000, 3.75000000000000, 3.75000000000000, 4.25000000000000, 5, 4.80000000000000, 4.85000000000000, 5.15000000000000, 6, 6.50000000000000, 6.30000000000000, 6.60000000000000, 6.50000000000000, 7, 7, 7, 7, 6.20000000000000, 7, 7.25000000000000, 6.60000000000000, 7.35000000000000, 7.25000000000000, 7.60000000000000, 7.25000000000000, 8, 8.50000000000000, 8, 8, 8, 8.50000000000000, 8.50000000000000, 8.25000000000000, 8.50000000000000, 8.20000000000000, 9.10000000000000, 8.50000000000000, 8.75000000000000, 8.85000000000000, 8.90000000000000, 9.25000000000000, 8.80000000000000, 9, 9.50000000000000, 7.25000000000000, 8.65000000000000, 10.5000000000000, 10.7500000000000, 9.50000000000000, 9.50000000000000, 10, 9.85000000000000, 9.70000000000000, 9.50000000000000, 10, 10.2500000000000, 10.0500000000000, 9.25000000000000, 9.75000000000000, 10.4000000000000, 11, 9.40000000000000, 10.7500000000000, 11.3500000000000, 11.2500000000000, 11.2500000000000, 12.5000000000000, 12.5000000000000, 12.2500000000000, 12.8500000000000, 11.4000000000000, 10.9000000000000, 11.7500000000000, 12, 13.5000000000000, 12, 12.5000000000000, 12.9000000000000, 13.5000000000000, 10.3000000000000, 11.5500000000000, 11.1500000000000, 12.9500000000000, 13.2500000000000, 13.1000000000000, 13, 14.5000000000000, 12, 11.9000000000000, 12, 12.7500000000000, 14.8500000000000, 13.9000000000000, 12.5000000000000, 13.7500000000000, 14, 13.5000000000000, 14, 13, 13.8500000000000, 13.6000000000000, 13.1500000000000, 15.3500000000000, 14.7500000000000, 16.5000000000000, 15, 15, 15.7500000000000, 13, 15.5000000000000, 15, 16, 16.2500000000000, 15.5000000000000, 15.5000000000000, 16, 16.5000000000000, 16.5000000000000, 17, 15.2500000000000, 16.5000000000000, 14.5000000000000, 14.6500000000000, 16.2500000000000, 16.1500000000000, 16, 14, 18, 17.5000000000000, 15.2500000000000, 19, 18.5000000000000, 18.5000000000000, 18.2500000000000, 19, 17, 20.2500000000000, 18, 19, 20, 17, 18, 18.5000000000000, 18.8500000000000, 19.7500000000000, 18.5000000000000, 21, 21, 20.5000000000000, 19.5000000000000, 20, 21.5000000000000, 21, 20, 23.5000000000000, 21, 20.7000000000000, 18.5500000000000, 23.5000000000000, 22.5000000000000, 22.5000000000000, 20.8000000000000, 22, 24.2500000000000, 24.5000000000000, 25.5000000000000, 25, 24, 24.3750000000000, 24, 23, 25, 25, 23.5000000000000, 25.7500000000000, 29.0500000000000, 24.5000000000000, 27, 27, 29, 23.9000000000000, 27.5000000000000, 27, 26.4000000000000, 29, 26.5000000000000, 30, 28.7500000000000, 27, 29.5000000000000, 28.7500000000000, 30.4500000000000, 28.5000000000000, 29.5000000000000, 31.5000000000000, 33.5000000000000, 34.5000000000000, 25.5000000000000, 28.8000000000000, 34.5000000000000, 34.5000000000000, 32, 30.5000000000000, 30.5000000000000, 35.5000000000000, 36.5000000000000, 31, 29.5000000000000, 35, 30.5000000000000, 35, 34.5000000000000, 34.5000000000000, 37.5000000000000, 35, 34.5000000000000, 35, 35.7500000000000, 35, 33, 38, 36.5000000000000, 38, 30, 34, 37, 37.5000000000000, 34.1000000000000, 34.1000000000000, 34, 37.7000000000000, 37.7000000000000, 44, 36, 36.5000000000000, 42, 38, 44, 40.8000000000000, 35, 45.5000000000000, 37.5000000000000, 43.5000000000000, 40, 39, 41.5000000000000, 46.5000000000000, 46, 46.5000000000000, 34.7500000000000, 49.5000000000000, 45.5000000000000, 47, 53, 41, 46, 46.7500000000000, 48, 48.2500000000000, 47.5000000000000, 48.5000000000000, 52.5000000000000, 52, 49.2000000000000, 50, 54, 48, 53.5000000000000, 59, 56, 60, 56, 60, 47, 60, 56, 58, 54.5000000000000, 59.5000000000000, 60, 50, 55.5000000000000, 61.5000000000000, 60, 51.9000000000000, 60, 62.2500000000000, 66, 62, 62, 64.2500000000000, 64, 67, 50.5000000000000, 68, 69, 67, 65, 70.5000000000000, 70, 62.5000000000000, 68.2500000000000, 69, 47.2500000000000, 66.5000000000000, 58.5000000000000, 62.5000000000000, 73, 70, 63.5000000000000, 62.5000000000000, 69, 69, 65.5000000000000, 81, 66, 65.5000000000000, 82.5500000000000, 78, 85.5000000000000, 85, 84, 70.8500000000000, 95.5000000000000, 88, 72.7500000000000, 83.5000000000000, 89, 93.5000000000000, 76.5000000000000, 96.3750000000000, 93.5000000000000, 75, 101.500000000000, 81, 99.5000000000000, 105.500000000000, 109.500000000000, 87, 113.500000000000, 115.500000000000, 113.500000000000, 85.5000000000000, 119, 113, 105, 124.750000000000, 122.500000000000, 132, 121, 121.500000000000, 129, 117.500000000000, 135, 136.500000000000, 109.500000000000, 135, 126.500000000000, 144, 140, 128.500000000000, 136, 153, 148.400000000000, 149, 150, 149, 164, 165, 137, 158, 179.500000000000, 173.500000000000, 184.500000000000, 212.500000000000, 210.500000000000, 159, 152.500000000000, 155, 219.500000000000, 162, 204, 188.500000000000, 201.500000000000, 210.500000000000, 173, 208.500000000000, 193.500000000000, 208, 242.500000000000, 227.500000000000, 192.500000000000, 216, 214.500000000000, 228.500000000000, 211, 231.500000000000, 246, 232.500000000000, 252, 241.750000000000, 245, 256.500000000000, 254, 285, 265, 220.500000000000, 307, 225, 292, 306, 325, 291.500000000000, 345, 345, 316, 337.500000000000, 341, 308, 274, 346.500000000000, 344.500000000000, 336, 341, 280, 355, 301.500000000000, 361, 290, 315, 351.500000000000, 363.500000000000, 412.500000000000, 404, 325, 370, 321, 378, 427, 393, 383.500000000000, 460, 382.500000000000, 423.500000000000, 410, 380, 441, 437.500000000000, 431, 325, 409, 453, 515.500000000000, 540, 462.500000000000, 527.500000000000, 554.500000000000, 468.500000000000, 548, 510, 490, 482.500000000000, 335.500000000000, 562.500000000000, 578, 585.500000000000, 631, 547, 566.500000000000, 607.500000000000, 682.500000000000, 554, 650.500000000000, 725, 765, 750, 676.250000000000, 661, 680, 797.500000000000, 793.500000000000, 915, 814, 765, 832.500000000000, 951.500000000000, 745, 742.500000000000, 904.500000000000, 689, 1019, 921, 1050, 1106, 979, 1041, 1160, 1085, 1250, 1187.50000000000, 1275, 1185, 1065, 1195, 1145, 1450, 1343.50000000000, 1410, 1565, 1200, 1379, 1210, 1466, 1520, 1825, 1425, 2000, 3075, 3375, 3300, 2995, 4400, 7001, 40.6000000000000, 109.300000000000, 96.5000000000000, 90.1000000000000, 21.5000000000000, 35.9000000000000, 41.3000000000000, 155, 485, 15, 47, 93.5000000000000, 43, 46, 39.5000000000000, 12.5000000000000, 53, 55.7000000000000, 11, 42, 284.600000000000, 405, 46.2000000000000, 7.80000000000000, 102, 26, 11.3000000000000, 26, 10, 8, 4200, 11.9000000000000, 8.10000000000000, 18, 19, 25, 6, 15.7000000000000, 21, 13, 15.3000000000000, 22.7000000000000, 10.7000000000000, 12, 67.2000000000000, 9.80000000000000, 18.3000000000000, 12, 4.20000000000000, 16.5000000000000, 7, 13.4000000000000, 42, 18, 37, 18.5000000000000, 20, 25, 82, 8, 28, 7, 31, 840, 11, 54, 123, 88, 4.30000000000000, 59, 455, 18, 40, 58, 61, 162, 330, 28, 420, 1275, 18, 262, 180, 700, 102])




colors = ['green', 'crimson']
labels = [r'Suriname - 4\textdegree', r'Amapa - 1\textdegree']


eval_points = np.linspace(min(np.log10(x2)), max(np.log10(x2)))
kde_sp = gaussian_kde(np.log10(x2), bw_method=0.4)
kd = kde_sp.pdf(eval_points)

ax0.plot(10**eval_points, kd, label = labels[0], color = colors[0], lw=3)



eval_points = np.linspace(min(np.log10(x3)), max(np.log10(x3)))
kde_sp = gaussian_kde(np.log10(x3), bw_method=0.4)
kd = kde_sp.pdf(eval_points)

ax0.plot(10**eval_points, kd, label = labels[1], color = colors[1], lw=3)





ax0.set_xlabel(r' Mass (g)', fontsize = 36)
ax0.set_ylabel('Probability density', fontsize=36)


#fig.text(-0.0125, 0.56, 'Probability density', ha='center', va='center', rotation='vertical', fontsize = 36)

xticklabels = getp(gca(), 'xticklabels')
yticklabels = getp(gca(), 'yticklabels')
setp(yticklabels, fontsize=25, fontname = 'Arial')
setp(xticklabels, fontsize=25)

ax0.yaxis.set_major_formatter(nullfmt)
yticks([])


ax0.legend(prop={'size':27}, loc ='upper right')

#----------------------------------------------------------------------------------------------------------#


#La Selva
y = np.array([4.26000000e+02,9.46000000e+02,1.03800000e+03,1.11600000e+03,1.22000000e+03,1.28300000e+03,1.40300000e+03,1.78200000e+03,2.02200000e+03,2.05800000e+03,2.07500000e+03,2.12000000e+03,2.21000000e+03,2.32400000e+03,2.42900000e+03,2.64200000e+03,3.09500000e+03,3.19000000e+03,3.23900000e+03,3.24200000e+03,3.32200000e+03,3.52900000e+03,3.97000000e+03,3.97900000e+03,4.14600000e+03,4.59200000e+03,6.13000000e+03,6.43000000e+03,6.46000000e+03,7.98200000e+03,8.84800000e+03,5.78500000e+02,np.NaN,np.NaN,np.NaN,1.25950000e+03,1.73850000e+03,1.85250000e+03,1.78800000e+03,2.46250000e+03,2.56600000e+03,2.70850000e+03,2.79600000e+03,3.67400000e+03,3.71700000e+03,3.98266667e+03,4.28500000e+02,4.74300000e+03,5.42500000e+02,5.96500000e+02,6.66000000e+02,1.97100000e+03,1.89800000e+03,5.76000000e+02,3.09000000e+02,1.60700000e+03,2.01600000e+03,3.93000000e+02,5.72000000e+02,6.46000000e+02,2.11800000e+03,3.66300000e+03,3.81500000e+03,4.40100000e+03,5.08500000e+03,1.47125000e+03,1.91450000e+03,2.06400000e+03,2.73800000e+03,3.21900000e+03,2.17100000e+03,1.04300000e+03,3.31150000e+03,2.22700000e+03,1.90000000e+03,3.74550000e+03,2.78900000e+03,1.19100000e+03,2.33800000e+03,3.70000000e+03,8.72900000e+03,np.NaN,np.NaN,3.42100000e+03,3.46600000e+03,5.53000000e+02,np.NaN,1.95800000e+03,2.43500000e+02,2.89300000e+03,3.98000000e+03,3.28850000e+03,1.15900000e+03,1.88100000e+03,3.04600000e+03,7.83000000e+02,4.42200000e+03,np.NaN,2.57300000e+03,1.51300000e+03,1.52800000e+03,2.27300000e+03,3.03000000e+03,3.08000000e+03,3.39600000e+03,3.42300000e+03,3.46000000e+03,3.66500000e+03,3.99800000e+03,4.37900000e+03,4.77500000e+03,1.71100000e+03,2.34500000e+03,3.09500000e+03,3.86200000e+03,5.60000000e+02,8.66666667e+02,9.94333333e+02,6.23000000e+02,5.30000000e+03,7.01700000e+03,2.93400000e+03,3.61250000e+03,1.30650000e+03,3.28800000e+03,2.29800000e+03,3.60000000e+03,np.NaN,np.NaN,3.09600000e+03,7.38600000e+03,np.NaN,1.72150000e+03,2.18150000e+03,3.51125000e+03,1.41100000e+03,1.48600000e+03,2.14500000e+03,2.26800000e+03,2.38000000e+03,2.52500000e+03,3.37000000e+03,7.57100000e+03,1.27033333e+03,2.27150000e+03])
x = np.array([5.10000000e+02,8.70000000e+01,3.46500000e+02,6.60000000e+01,8.80000000e+01,9.21000000e+02,6.07500000e+02,6.50000000e+01,4.00000000e+01,1.84500000e+02,6.90000000e+01,4.50000000e+01,8.50000000e+00,9.55000000e+01,7.25000000e+00,3.45000000e+01,1.75000000e+01,6.60000000e+01,1.09500000e+02,2.70000000e+01,2.01000000e+01,6.05000000e+01,1.25000000e+01,1.57500000e+01,1.13000000e+01,2.55000000e+01,4.25000000e+00,1.70000000e+01,1.10000000e+01,2.95000000e+01,2.25000000e+01,2.92500000e+01,1.09300000e+02,2.08000000e+02,4.07000000e+02,4.05000000e+01,8.50000000e+01,4.41000000e+02,3.70000000e+02,8.00000000e+00,3.17500000e+01,1.90000000e+01,4.65000000e+01,1.55000000e+01,1.39000000e+01,1.05000000e+01,6.22500000e+01,2.42500000e+01,1.49000000e+02,2.01500000e+02,1.35000000e+02,4.10000000e+01,7.80000000e+01,1.28500000e+02,1.17500000e+02,4.75000000e+01,6.00000000e+01,7.65000000e+02,1.23000000e+02,8.40000000e+02,3.80000000e+01,2.10000000e+01,2.38000000e+01,2.15000000e+01,1.15500000e+01,5.55000000e+01,2.41750000e+02,5.94000000e+01,3.45000000e+01,2.87500000e+01,3.65000000e+01,1.30100000e+03,2.64000000e+01,3.77000000e+01,3.90000000e+01,3.05000000e+01,2.90000000e+03,4.08000000e+02,1.60000000e+01,7.80000000e+00,1.67500000e+01,1.90000000e+01,5.80000000e+01,3.27500000e+01,np.NaN,6.20000000e+01,5.00000000e+02,1.87700000e+02,1.14500000e+03,3.80000000e+01,2.20000000e+01,2.35000000e+01,6.00000000e+01,5.85000000e+01,9.50000000e+00,4.05000000e+02,1.05000000e+01,1.30000000e+01,1.80000000e+01,2.16000000e+02,3.75000000e+01,1.60000000e+01,3.50000000e+01,3.10000000e+01,1.65000000e+01,3.80000000e+01,3.25000000e+01,2.30000000e+01,2.05000000e+01,1.25000000e+01,4.20000000e+01,2.41000000e+02,2.95000000e+01,5.40000000e+01,2.70000000e+01,1.36000000e+02,4.67500000e+01,1.69200000e+02,5.22500000e+01,5.57000000e+01,3.15000000e+00,4.70000000e+01,3.50000000e+01,5.15500000e+02,1.40000000e+01,2.60000000e+01,1.64000000e+01,9.70000000e+00,3.15000000e+01,1.70000000e+01,1.30000000e+01,4.49600000e+02,1.80000000e+01,4.70000000e+01,1.47500000e+01,1.10000000e+02,2.65000000e+01,3.90000000e+01,1.90000000e+01,3.53000000e+01,2.10000000e+01,3.20000000e+01,9.90000000e+00,5.10000000e+01,4.25000000e+01])





#los amigos
y1 = np.array([7029, 9877, 4154, 6983, 3335, 2603, 2377, 3814, 2914, 2373, 2297, 2684, 2134, 3870, 7930, 3902, 1895, 5594, 1727, 2861, 4201, 2292, 3675, 4088, 4517, 3838, 3407, 4004, 2781, 4532, 3452, 3608, 3024, 6568, 4668, 3583, 3216, 7317, 3086, 5749, 3531, 2105, 3685, 4297, 2507, 3292, 1642, 3637, 1235, 2371, 3273, 2756, 8441, 2311, 2402, 2809, 2562, 1809, 2565, 8144, 3596, 2369, 3464, 3673, 2793, 2924, 3199, 3826, 2617, 8687, 1321, 1727, 3417, 2507, 546, 2594, 2048, 1890, 2375, 3895, 7379, 2192, 4014, 2797, 3618, 2574, 3886, 3211, 1881, 2584, 2842, 5067, 1916, 2182, 2345, 2282, 1933, 1507, 2756, 2527, 2622, 3455, 2306, 1292, 2201, 2125, 2512, 2603, 2799, 718, 1550, 2895, 2196, 2369, 1952, 1823, 1436, 3263, 675, 1483, 1450, 1991, 2795, 2173, 2192, 1701, 1240, 416, 2196, 1723, 876, 1708, 2705, 3125, 3695, 1991, 1445, 1969, 1550, 2102, 2136, 1230, 1857, 2139, 2670, 354, 1244, 2378, 1952, 445, 2126, 2000, 2469, 412, 1723, 498, 764, 1680, 383, 1914, 1943, 3067, 1967, 1814, 1992, 1790, 517, 1206, 1292, 2048, 1275, 4910, 1493, 1684, 1385, 1211, 1505, 1809, 1311, 1240, 2239, 1780, 1235, 1485, 1556, 1182, 402, 1457, 967, 1455, 1091, 871, 1498, 1187, 172, 1516, 3503])
x1 = np.array([3.15, 3.6, 8.5, 6.8, 9.8, 7, 7.25, 11, 7.75, 8, 12, 8.25, 8.95, 9, 9, 9.5, 9.5, 9.7, 10.25, 10.75, 10.5, 10.95, 11, 16.5, 16.5, 17, 12.4, 12.5, 18.3, 12.5, 14, 13, 13, 13.25, 13.6, 15.75, 15.25, 15, 14.75, 15.5, 15.5, 16, 16.5, 16, 16, 16.5, 18, 17.5, 18, 26, 19, 19, 20.25, 20.7, 20.5, 20, 20.1, 20, 21, 21, 21.5, 22.5, 32.5, 24, 24, 35, 25, 24.5, 25, 27, 26.5, 39, 39, 28.5, 29.25, 29.5, 42, 30.5, 29.5, 29, 30.45, 29.5, 44, 30.5, 31, 32, 46, 46.2, 47, 35.3, 34.5, 35.75, 36.5, 35.5, 38, 37.7, 54, 37.5, 40, 41, 38, 38, 42.5, 40.5, 41, 42.5, 43.5, 45, 46, 46.75, 47.5, 67.2, 47.25, 47, 47.5, 69, 51, 71, 50, 55.5, 54, 56, 56, 82, 58, 60, 60, 62.25, 60.5, 89, 61, 65, 66.5, 66, 68, 68, 69, 69, 111, 78, 83, 88, 93.5, 95.5, 105, 114.5, 158, 113, 117.5, 126.5, 119.5, 129, 140, 140, 150, 149, 153.5, 153, 153, 164, 241, 262, 184.5, 201, 197.5, 208.5, 214.5, 216, 222, 210.5, 232.5, 265, 376, 407, 420, 430, 455, 370, 398, 408, 420, 441, 515.5, 547, 540, 562.5, 840, 607.5, 750, 921, 1160, 1301, 1360, 1594, 3180, 187.7, 284.6])

#rio crystalino
y2 = np.array([1.75067000e+03,1.75067000e+03,1.40667000e+03,1.77933000e+03,1.14833000e+03,8.03670000e+02,6.31000000e+02,7.11000000e+02,5.16000000e+02,6.60000000e+02,1.34900000e+03,1.55000000e+03,8.89670000e+02,1.37800000e+03,1.23367000e+03,4.01330000e+02,2.61200000e+03,2.38233000e+03,1.98067000e+03,1.20500000e+03,1.40633000e+03,1.89433000e+03,2.21033000e+03,3.01400000e+03,4.90900000e+03,2.29633000e+03,2.46867000e+03,2.12433000e+03,1.80800000e+03,2.03800000e+03,3.12900000e+03,2.21033000e+03,2.95667000e+03,2.52600000e+03,2.06667000e+03,2.78433000e+03,5.79933000e+03,4.44967000e+03,1.49233000e+03,1.83667000e+03,1.72200000e+03,2.32500000e+03,2.46833000e+03,4.24867000e+03,6.02867000e+03,3.33000000e+03,4.07633000e+03,3.01400000e+03,3.53067000e+03,1.77967000e+03,1.17633000e+03,2.43967000e+03,3.70300000e+03,2.66967000e+03,3.41600000e+03,4.04767000e+03,2.95667000e+03,2.38267000e+03,2.03833000e+03,4.87330000e+02,8.61000000e+02,3.38767000e+03,2.18167000e+03,1.77933000e+03,2.75567000e+03,3.84667000e+03,1.55000000e+03,3.12900000e+03,4.99533000e+03,3.87533000e+03,2.29633000e+03,1.40667000e+03,2.66933000e+03,2.92800000e+03,3.99033000e+03,2.46833000e+03,1.98067000e+03,2.03833000e+03,2.95667000e+03,2.35367000e+03,3.15767000e+03,3.55967000e+03,2.15267000e+03])
x2 = np.array([4.50000000e+02,4.80000000e+02,3.90000000e+02,3.50000000e+02,2.00000000e+02,1.28000000e+03,2.10000000e+02,1.25000000e+02,1.75000000e+02,1.45000000e+02,4.30000000e+01,5.90000000e+01,1.22000000e+02,4.40000000e+01,9.10000000e+01,1.11000000e+02,2.40000000e+01,7.90000000e+01,7.40000000e+01,2.03000000e+02,7.34000000e+02,3.69000000e+02,1.34000000e+02,3.60000000e+01,1.40000000e+01,7.00000000e+01,1.36000000e+02,7.30000000e+01,6.50000000e+01,6.50000000e+01,4.00000000e+01,3.00000000e+01,1.60000000e+01,2.90000000e+01,3.54000000e+01,3.40000000e+01,1.20000000e+01,3.60000000e+01,4.00000000e+01,2.33000000e+01,2.10000000e+01,1.60000000e+01,2.10000000e+01,1.00000000e+01,2.00000000e+01,9.00000000e+00,1.10000000e+01,1.60000000e+01,1.03000000e+01,2.00000000e+01,1.97000000e+01,8.00000000e+00,1.10000000e+01,1.30000000e+01,3.14000000e+01,1.30000000e+01,4.50000000e+01,5.80000000e+01,4.90000000e+01,1.18000000e+02,4.80000000e+01,1.26000000e+01,3.50000000e+01,3.60000000e+01,8.10000000e+01,1.20000000e+01,2.00000000e+01,2.90000000e+01,7.00000000e+00,1.20000000e+01,6.60000000e+00,1.40000000e+01,1.20000000e+01,1.40000000e+01,1.10000000e+01,2.00000000e+01,1.90000000e+01,1.80000000e+01,9.10000000e+00,2.60000000e+01,1.30000000e+01,1.15000000e+01,4.40000000e+01])

#Mirador
y3 = np.array([6300, 5100, 2700, 3800, 2400, 4600, 5300, 3700, 6300, 7000, 7600, 2000, 6400, 5000, 3000, 7100, 3100, 6400, 5400, 7300, 9400, 7700, 3200, 1100, 4400, 7400, 4700, 2900, 2500, 4100, 5500, 4000, 1700, 2200, 1700, 8000, 4100, 4900, 7000, 6600, 8000, 5000, 2700, 7500, 8700, 5300, 3000, 6400, 3700, 3800, 1500, 2400, 2700, 3900, 9300, 4000, 8000, 6300, 6900, 2600, 1100, 1700, 6900, 10200, 7500, 430, 1300, 1350, 620, 380, 1600, 1450, 1550, 1550, 1300])
x3 = np.array([36, 12, 17, 25, 60, 8, 11, 12, 13, 17, 18, 36, 7, 12, 12, 17, 17, 11, 13, 17, 40, 45, 80, 300, 16, 18, 21, 60, 32, 17, 35, 12, 84, 68, 75, 15, 16, 10, 12, 11, 10, 37, 25, np.NaN, 54, 37, 18, 10, 19, 22, 18, 29, 7, 43, 17, 55, 10, 8, 10, 52, 770, 1350, 6, 5, 7, 150, 116, 80, np.NaN, 310, np.NaN, np.NaN, 750, 670, 64])

#San isidro
y5 = np.array([380,440,590,1100,1120,1290,1320,1357,1400,1540,1550,1550,1600,1600,1645,1709,1791,2000,2150,2400,2430,2500,2550,2600,2700,2700,2720,2792,2900,2950,3000,3100,3130,3300,3300,3700,3741,3800,3800,3800,3963.5,4000,4060,4074,4200,4200,4300,4350,4400,4500,4960,5020,5260,5300,5500,5700,5900,6000,6020,6250,6300,6300,6300,6420,6425,6650,6700,6910,6950,6990,7080,7200,7400,7400,7440,7543,7640,8080,8350,9370,9400,10200])
x5 = np.array([311,149.5,np.NaN,407,562.5,115.7,64,79.5,201,752.5,np.NaN,672.5,18.4,np.NaN,1372.5,84,75,36,65.5,29.75,68,31.35,40,52,18.1,7,26.75,266,68.6,18.2,12,16.5,80,31.25,66,19,12.35,23.9,21.75,63,12,43.5,17,15.5,15,12.5,17.25,8.2,15.5,7.8,37,11.6,10.5,36.3,35,10.5,18.5,29,10,36,13.05,7.5,np.NaN,6.55,10.6,10.8,10.5,6,20.4,16.75,17.25,16.5,17.5,17,7.3,np.NaN,15.5,10,53.5,16.5,39.5,4.9])

x0 = np.array([1.00000000e+00,5.10000000e+01,1.01000000e+02,1.51000000e+02,2.01000000e+02,2.51000000e+02,3.01000000e+02,3.51000000e+02,4.01000000e+02,4.51000000e+02,5.01000000e+02,5.51000000e+02,6.01000000e+02,6.51000000e+02,7.01000000e+02,7.51000000e+02,8.01000000e+02,8.51000000e+02,9.01000000e+02,9.51000000e+02,1.00100000e+03,1.05100000e+03,1.10100000e+03,1.15100000e+03,1.20100000e+03,1.25100000e+03,1.30100000e+03,1.35100000e+03,1.40100000e+03,1.45100000e+03,1.50100000e+03,1.55100000e+03,1.60100000e+03,1.65100000e+03,1.70100000e+03,1.75100000e+03,1.80100000e+03,1.85100000e+03,1.90100000e+03,1.95100000e+03,2.00100000e+03,2.05100000e+03,2.10100000e+03,2.15100000e+03,2.20100000e+03,2.25100000e+03,2.30100000e+03,2.35100000e+03,2.40100000e+03,2.45100000e+03,2.50100000e+03,2.55100000e+03,2.60100000e+03,2.65100000e+03,2.70100000e+03,2.75100000e+03,2.80100000e+03,2.85100000e+03,2.90100000e+03,2.95100000e+03,3.00100000e+03,3.05100000e+03,3.10100000e+03,3.15100000e+03,3.20100000e+03,3.25100000e+03,3.30100000e+03,3.35100000e+03,3.40100000e+03,3.45100000e+03,3.50100000e+03,3.55100000e+03,3.60100000e+03,3.65100000e+03,3.70100000e+03,3.75100000e+03,3.80100000e+03,3.85100000e+03,3.90100000e+03,3.95100000e+03,4.00100000e+03,4.05100000e+03,4.10100000e+03,4.15100000e+03,4.20100000e+03,4.25100000e+03,4.30100000e+03,4.35100000e+03,4.40100000e+03,4.45100000e+03,4.50100000e+03,4.55100000e+03,4.60100000e+03,4.65100000e+03,4.70100000e+03,4.75100000e+03,4.80100000e+03,4.85100000e+03,4.90100000e+03,4.95100000e+03,5.00100000e+03,5.05100000e+03,5.10100000e+03,5.15100000e+03,5.20100000e+03,5.25100000e+03,5.30100000e+03,5.35100000e+03,5.40100000e+03,5.45100000e+03,5.50100000e+03,5.55100000e+03,5.60100000e+03,5.65100000e+03,5.70100000e+03,5.75100000e+03,5.80100000e+03,5.85100000e+03,5.90100000e+03,5.95100000e+03,6.00100000e+03,6.05100000e+03,6.10100000e+03,6.15100000e+03,6.20100000e+03,6.25100000e+03,6.30100000e+03,6.35100000e+03,6.40100000e+03,6.45100000e+03,6.50100000e+03,6.55100000e+03,6.60100000e+03,6.65100000e+03,6.70100000e+03,6.75100000e+03,6.80100000e+03,6.85100000e+03,6.90100000e+03,6.95100000e+03,7.00100000e+03,7.05100000e+03,7.10100000e+03,7.15100000e+03,7.20100000e+03,7.25100000e+03,7.30100000e+03,7.35100000e+03,7.40100000e+03,7.45100000e+03,7.50100000e+03,7.55100000e+03,7.60100000e+03,7.65100000e+03,7.70100000e+03,7.75100000e+03,7.80100000e+03,7.85100000e+03,7.90100000e+03,7.95100000e+03,8.00100000e+03,8.05100000e+03,8.10100000e+03,8.15100000e+03,8.20100000e+03,8.25100000e+03,8.30100000e+03,8.35100000e+03,8.40100000e+03,8.45100000e+03,8.50100000e+03,8.55100000e+03,8.60100000e+03,8.65100000e+03,8.70100000e+03,8.75100000e+03,8.80100000e+03,8.85100000e+03,8.90100000e+03,8.95100000e+03,9.00100000e+03,9.05100000e+03,9.10100000e+03,9.15100000e+03,9.20100000e+03,9.25100000e+03,9.30100000e+03,9.35100000e+03,9.40100000e+03,9.45100000e+03,9.50100000e+03,9.55100000e+03,9.60100000e+03,9.65100000e+03,9.70100000e+03,9.75100000e+03,9.80100000e+03,9.85100000e+03,9.90100000e+03,9.95100000e+03,1.00010000e+04])


x = x[~np.isnan(y)]
y = y[~np.isnan(y)]
y = y[~np.isnan(x)]
x = x[~np.isnan(x)]
x3 = x3[~np.isnan(y3)]
y3 = y3[~np.isnan(y3)]
y3 = y3[~np.isnan(x3)]
x3 = x3[~np.isnan(x3)]
x5 = x5[~np.isnan(y5)]
y5 = y5[~np.isnan(y5)]
y5 = y5[~np.isnan(x5)]
x5 = x5[~np.isnan(x5)]


x = np.hstack([x, x1, x2, x3, x5])
y = np.hstack([y, y1, y2, y3, y5])

logx = np.log10(x)
logy = np.log10(y)






# definitions for the axes
left, width = 0.1, 0.65
bottom, height = 0.1, 0.65
bottom_h = left_h = left + width + 0.02

rect_scatter = [left, bottom, width, height]
rect_histx = [left, bottom_h, width, 0.2]
rect_histy = [left_h, bottom, 0.2, height]

ax1.scatter(x, y, color='navy', alpha=0.55, s=40)


xticklabels = getp(gca(), 'xticklabels')
yticklabels = getp(gca(), 'yticklabels')
setp(yticklabels, fontsize=25, fontname = 'Arial')
setp(xticklabels, fontsize=25)




divider = make_axes_locatable(ax1)
axHistx = divider.append_axes("top", 1.2, pad=0.1, sharex=ax1)
axHisty = divider.append_axes("right", 1.2, pad=0.1, sharey=ax1)




ax1.set_yscale('log')

ax1.set_xlim((1, 10000))
ax1.set_ylim((100, 10000))



fit = np.polyfit(logx, logy, 1) #-0.39 log x + 4.04

a = -0.4
b = 3.98


correlation = np.corrcoef(logx, logy)[0,1]
r2 = correlation**2 #0.47

ax1.plot(x0, x0**a*10**b, color='crimson', linestyle= '--', lw = 2, dashes=(12, 6))




eval_points = np.linspace(np.min(logx), np.max(logx))

kde_sp = gaussian_kde(logx, bw_method=0.3)
kd = kde_sp.pdf(eval_points)



xbins = np.logspace(0, 4, 25)


axHistx.set_xscale('log')

axHistx.set_xlim((1, 10000))

axHistx.plot(10**eval_points, kd, lw=2, color='navy')

xi_top = 10**eval_points
yi_top = kd


eval_points = np.linspace(np.min(logy), np.max(logy))

kde_sp = gaussian_kde(logy, bw_method=0.3)
kd = kde_sp.pdf(eval_points)


axHisty.set_yscale('log')

axHisty.set_ylim((100, 10000))

axHisty.plot(kd, 10**eval_points, lw=2, color='navy')

xi_side = kd
yi_side = 10**eval_points

predicted = -np.interp((eval_points  - b)/a, np.log10(xi_top), yi_top)/a

axHisty.plot(predicted, 10**eval_points, color='crimson', lw=2, linestyle = '--')

ax1.set_ylabel('Frequency (Hz)', fontsize = 38)
ax1.set_xlabel('Mass (g)', fontsize = 38)


plt.setp(ax1.get_xticklabels(), visible=True, fontsize = 29)
plt.setp(ax1.get_yticklabels(), visible=True, fontsize = 29)

# no labels
plt.setp(axHisty.get_xticklabels(), visible=False)
plt.setp(axHisty.get_yticklabels(), visible=False)

plt.setp(axHistx.get_xticklabels(), visible=False)
plt.setp(axHistx.get_yticklabels(), visible=False)





fig.tight_layout()

plt.savefig('acoustic1.png')
